#version 460

#extension GL_EXT_ray_tracing : require

struct GlobalUniforms {
    mat4 view_inverse;
    mat4 proj_inverse;
};

layout(location = 0) rayPayloadEXT vec3 payload;

layout(set = 0, binding = 0) uniform accelerationStructureEXT top_level_as;
layout(set = 0, binding = 1, rgba8) uniform image2D image;
layout(set = 1, binding = 0) uniform _GlobalUniforms { GlobalUniforms globals; };

void main() {
    const vec2 pixel_center = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 in_uv = pixel_center / vec2(gl_LaunchSizeEXT.xy);

    const vec2 d = in_uv * 2.0 - 1.0;

    const vec3 origin = (globals.view_inverse * vec4(0.0, 0.0, 0.0, 1.0)).xyz;
    const vec3 target = (globals.proj_inverse * vec4(d.x, -d.y, 1.0, 1.0)).xyz;
    const vec3 direction = (globals.view_inverse * vec4(normalize(target), 0.0)).xyz;

    const uint ray_flags = gl_RayFlagsTerminateOnFirstHitEXT;
    const uint cull_mask = 0xFFu;
    const float tmin = 0.001;
    const float tmax = 10000.0;

    traceRayEXT(top_level_as, ray_flags, cull_mask, 0u, 0u, 0u, origin, tmin, direction, tmax, 0);

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(payload, 1.0));
}